# Inspired from https://github.com/SpectralOps/rust-ci-release-template/blob/master/.github/workflows/release.yml
name: Release

on:
  push:
    branches:
      - testing
    # tags:
    #   - "[0-9]+.[0-9]+.[0-9]+"

env:
  BIN_NAME: freezer
  PROJECT_NAME: freezer
  REPO_NAME: WithSecureLabs/freezer


jobs:
  dist:
    name: Dist
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build: [x86_64-linux, aarch64-linux, x86_64-windows, x86_64-macos]
        include:
        - build: x86_64-linux
          os: ubuntu-24.04
          rust: stable
          target: x86_64-unknown-linux-gnu
          cross: false
        - build: aarch64-linux
          os: ubuntu-24.04
          rust: stable
          target: aarch64-unknown-linux-gnu
          cross: true
        - build: x86_64-windows
          os: windows-2019
          rust: stable
          target: x86_64-pc-windows-msvc
          cross: false
        - build: x86_64-macos
          os: macos-latest
          rust: stable
          target: x86_64-apple-darwin
          cross: false

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install ${{ matrix.rust }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true

      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross }}
          command: build
          args: --release --target ${{ matrix.target }} --locked

      - name: Build archive
        shell: bash
        run: |
          mkdir -p dist
          if [ "${{ matrix.os }}" == "windows-2019" ]; then
            cp target/${{ matrix.target }}/release/$BIN_NAME.exe dist/
          else
            cp target/${{ matrix.target }}/release/$BIN_NAME dist/
          fi

      - uses: actions/upload-artifact@v4.4.3
        with:
          name: bins-${{ matrix.build }}
          path: dist
